"""
Django settings for travel_recommender project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent
SETTINGS_PATH = os.path.dirname(os.path.dirname(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ysp-=l)8mtr_q&3xe$05nn_)dlka$n3ax&bq5#emf8#2beu=40'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
CORS_ORIGIN_ALLOW_ALL = True


# Application definition

INSTALLED_APPS = [
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'django_apscheduler',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'corsheaders',
    'django_extensions',
    'enters',
    'surveys',
    'host_info',
    'personal_info',
    'travel_search',
    'plans',
    'utils'
]

SCHEDULER_CONFIG = {
    "apscheduler.jobstores.default": {
        "class": "django_apscheduler.jobstores:DjangoJobStore"
    },
    'apscheduler.executors.processpool': {
        "type": "threadpool"
    },
}
SCHEDULER_AUTOSTART = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'enters.models.SessionControllerMiddleware'
]

ROOT_URLCONF = 'travel_recommender.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'travel_recommender.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'travel_rcm',
        'USER': os.getenv("DATABASE_USER"),
        'PASSWORD': os.getenv("DATABASE_PASSWORD"),
        'HOST': os.getenv("DATABASE_HOST"),
        'PORT': int(os.getenv("DATABASE_PORT"))
    }
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST_VALUE')
EMAIL_PORT = int(os.getenv('EMAIL_PORT_VALUE'))
EMAIL_USE_TLS = bool(os.getenv('EMAIL_USE_TLS_VALUE'))
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER_VALUE')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD_VALUE')

API_KEY_FOR_MAPS = os.getenv('API_KEY_FOR_MAPS')
API_URL_FOR_MAPS = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location={0}&rankby=distance&type={1}&key={2}'
API_URL_FOR_PLACE = 'https://maps.googleapis.com/maps/api/place/details/json?place_id={0}&key={1}'
API_URL_FOR_PHOTOS = 'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference={0}&key={1}'
PLACE_URL = 'https://www.google.com/maps/search/?api=1&query={0},{1}'
THRESHOLD_OF_BOOKING_PREDICTION = float(os.getenv('THRESHOLD_OF_BOOKING_PREDICTION'))
THRESHOLD_OF_ACCOMMODATE_PREDICTION = float(os.getenv('THRESHOLD_OF_ACCOMMODATE_PREDICTION'))
NUMBER_OF_PLANS_EVERY_TURN = int(os.getenv('NUMBER_OF_PLANS_EVERY_TURN'))
PLACE_HOST_DISTANCE_LIMIT = int(os.getenv('PLACE_HOST_DISTANCE_LIMIT'))


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': '407769880874-o610f1t641r1llpbtj1ggvmahavk18v7.apps.googleusercontent.com',
            'secret': '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',
#            'key': ''
        },
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

LOGIN_URL = "/register/login"
LOGOUT_REDIRECT_URL = "/register/login"

#SESSION_COOKIE_AGE = 10 * 60
SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'

# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
#         'LOCATION': f'{BASE_DIR}/travel_recommender/django_cache',
#     }
# }


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, STATIC_URL),
]

#STATICFILES_DIRS = (os.path.join(BASE_DIR,'static'),) # this variable have been created for  adding static resourcess

STATIC_ROOT = os.path.join(BASE_DIR,'travel_recommender', 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# will be configuring for later 
#GDAL_LIBRARY_PATH = 'C:\\Program Files\\GDAL\\gdal305.dll'
